<launch>

    <arg name="quad" default="NX04"/>
    <arg name="gui_mission" default="true"/>
    <arg name="perfect_prediction" default="false"/>
    <arg name="student_policy_path" default="$(find panther)/../panther_compression/trained_policies/intermediate_policy_round31_log31.pt" />
    <arg name="static_planning" default="false" />  <!-- #If true, it will always plan from the same initial condition -->

    <!-- COMMANDS -->
    <node ns="$(arg quad)" name="commands" pkg="panther" type="commands.py" output="screen"/>

    <!-- RUN CAMERA AND TRACKER-->
    <group unless="$(arg perfect_prediction)">
        <include file="$(find panther)/launch/tracker_predictor.launch">
          <arg name="quad" value="$(arg quad)"/>
          <arg name="cloud_topic" value="/$(arg quad)/camera/depth/color/points"/>
        </include> 

        <include file="$(find panther_other)/launch/start_rs.launch">
          <arg name="quad" value="$(arg quad)"/>
          <arg name="record" value="false"/>
          <arg name="pub_tf_drone2camera" value="false"/>
        </include>
    </group> 

    <!-- BEHAVIOUR SELECTOR  
    <node pkg="behavior_selector" type="behavior_selector_node.py" name="behavior_selector" output="screen" />
    -->

    <!-- Not using tf2_ros here because of all the issues with /tf_static and rosbags -->
    <!-- See https://github.com/ros/robot_state_publisher/issues/105#issuecomment-467406420 -->

    <node pkg="tf2_ros" type="static_transform_publisher" name="drone2camera" args="0.0 -0.15 0.075 -1.5708 -0.15 0.0 $(arg quad) $(arg quad)/camera_link" />
    <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="link2_broadcaster" args="0.0 -0.15 0.075 -1.5708 -0.15 0.0 $(arg quad) $(arg quad)/camera_link" /> -->
    <!-- <node pkg="tf" type="static_transform_publisher" name="camera2camera_link" args="0.0 0.0 0.0 0.0 0 0.0 $(arg quad)/camera $(arg quad)/camera_link 10" /> -->

    <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="link1_broadcaster" args="0.2 0.0 0.0 0.0 0.0 3.14 SQ04 SQ04/camera" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="link2_broadcaster" args="0.0 0.0 0.0 0.0 0 0.0 SQ04/camera SQ04/camera_link" />
    -->


<!--     <node pkg="rosbag" type="record" name="rosbag_record_panther"
       args="record -o  /home/ubuntu/Desktop/bags/panther 
                        /$(arg quad)/goal
                        /$(arg quad)/state
                        /$(arg quad)/panther/actual_traj
                        /$(arg quad)/panther/fov
                        /$(arg quad)/panther/log
                        /$(arg quad)/panther/obstacles
                        /$(arg quad)/panther/point_A
                        /$(arg quad)/panther/point_G
                        /$(arg quad)/panther/point_G_term
                        /$(arg quad)/panther/polys
                        /$(arg quad)/panther/traj_obtained
                        /$(arg quad)/setpoint
                        /$(arg quad)/tracker_predictor_node/logtp
                        /$(arg quad)/tracker_predictor_node/marker_bbox_obstacles
                        /$(arg quad)/tracker_predictor_node/marker_predicted_traj
                        /$(arg quad)/tracker_predictor_node/pcloud_filtered
                        /$(arg quad)/tracker_predictor_node/trajs_predicted
                        /$(arg quad)/who_plans
                        /$(arg quad)/camera/color/image_raw/compressed
                        /$(arg quad)/camera/color/camera_info  
                        /$(arg quad)/camera/depth/color/points 
                        /globalflightmode
                        /rosout
                        /rosout_agg
                        /rviz_visual_tools
                        /tf
                        /tf_static"/> -->

    <!-- PANTHER --> 
    <node ns="$(arg quad)" name="panther" pkg="panther" type="panther_node" output="screen" clear_params="false"> 

        <!-- Parameters -->
        <rosparam file="$(find panther)/param/panther.yaml" command="load"/>
        <rosparam file="$(find panther)/matlab/casadi_generated_files/params_casadi.yaml" command="load"/>
        <param name="gui_mission" value="$(arg gui_mission)" /> 
        <param name="perfect_prediction" value="$(arg perfect_prediction)" /> 
        <param name="student_policy_path" value="$(arg student_policy_path)"/>
        <param name="static_planning" value="$(arg static_planning)" /> 
        
        <remap from="~state" to="state"/>
        <remap from="~who_plans" to="who_plans"/>
        <remap from="~term_goal" to="term_goal" />
        <remap from="~trajs_predicted" to="tracker_predictor_node/trajs_predicted" />

        <!-- Publications -->
        <remap from="~traj" to="traj"/>
        <remap from="~goal" to="goal" />
        <remap from="~setpoint" to="setpoint" />

    </node>

</launch>
